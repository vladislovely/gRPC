services:
  server:
    build:
      context: .
      args:
        BUILD_TARGET: server
    container_name: gRPC-server
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${GRPC_PORT}:${GRPC_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
  
  client:
    build:
      context: .
      args:
        BUILD_TARGET: client
    container_name: gRPC-client
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - server
  
  postgres:
    image: postgres:17
    container_name: gRPC-postgres
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - service_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      timeout: 3s
      retries: 3
      
volumes:
  service_pgdata:
    driver: local